#include <cstdio>
#include <chrono>
#include <iostream>
#include <vector>

#include <opencv2/opencv.hpp>
#include "opencv2/core/core.hpp"
#include <opencv2/imgproc/imgproc.hpp>
#include "opencv2/highgui/highgui.hpp"

int main()
{
	cv::Mat map_data = cv::imread("/home/nvidia/no_lidar_map", cv::IMREAD_GRAYSCALE);
	cv::Mat map_data_3ch;
	cv::cvtColor(map_data, map_data_3ch, cv::COLOR_GRAY2BGR);

	cv::Mat canny_temp;
	cv::Canny(map_data, canny_temp, 100, 100*3, 3);

	std::vector<std::vector<cv::Point>> contours;
	std::vector<std::vector<cv::Point>> ex_contours;
	std::vector<std::vector<cv::Point>> for_fill_contours;
	std::vector<cv::Vec4i> hierarchy;
	std::vector<cv::Vec4i> ex_hierarchy;

	cv::findContours(canny_temp, ex_contours, ex_hierarchy, cv::RETR_EXTERNAL, cv::CHAIN_APPROX_NONE);
	cv::Mat background_white(map_data_3ch.size(),map_data_3ch.type(),cv::Scalar(255,255,255));
	cv::fillPoly(background_white, ex_contours, cv::Scalar(0));
	cv::drawContours(background_white, ex_contours, 0, cv::Scalar(255,255,255), 1, 8, hierarchy, 0, cv::Point());
	background_white = background_white + map_data_3ch;

	cv::findContours(canny_temp, contours, hierarchy, cv::RETR_CCOMP, cv::CHAIN_APPROX_NONE);
	contours.pop_back(); // 이미지의 경계 외부
	contours.pop_back(); // 이미지의 경계 내부
	contours.pop_back(); // 최외곽 외부
	contours.pop_back(); // 최외곽 내부


	/*
	for ( int i=0; i<int(contours.size()); i++)
	{
		cv::drawContours(show_contour, contours, i, cv::Scalar(0,0,255), 0, 8, hierarchy, 0, cv::Point());
	}
	*/
	
	for_fill_contours = contours;
	for ( int i=0; i<int(contours.size()); i++)
	{
		for_fill_contours.pop_back();
		cv::fillPoly(background_white, for_fill_contours, cv::Scalar(255,255,255));
	}

	cv::Mat white_resize;
	cv::resize(background_white, white_resize, cv::Size(500, 500), 0, 0, cv::INTER_AREA);

	cv::imshow("white_resize", white_resize);
	cv::waitKey(0);
	return 0;
}
