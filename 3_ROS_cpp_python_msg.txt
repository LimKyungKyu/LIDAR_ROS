// 1. cpp Publisher의 값을 python Subscriber로 받기 //
###############################################################################################################################

// 1.1 cpp(기본 메세지) + python subscriber //
// cpp는 <std_msgs::Int32> 로 보냈다. //
cd && cd ros_test/src/python_test_package/src && vi py_sub_from_cpp_standard.py
////////////////////////////////////////////////////////////////////////////////
#!/usr/bin/env python3

import rospy
from std_msgs.msg import Int32

def callback(data):
	rospy.loginfo("I heard %d", data.data)

def listener():
	rospy.init_node('my_subscriber_node',anonymous=True)

	rospy.Subscriber("my_package_msg", Int32, callback)

	rospy.spin()

if __name__=='__main__':
	listener()
////////////////////////////////////////////////////////////////////////////////



// 1-2. cpp(my_msg_file_cpp.msg) + python subscriber //
cd && cd ros_test/src/python_test_package/src && vi py_sub_from_cpp_manual.py
////////////////////////////////////////////////////////////////////////////////
#!/usr/bin/env python3

import rospy
from python_test_package.msg import my_msg_file_cpp

def callback(data):
	rospy.loginfo("I heard %d", data.data)
	rospy.loginfo(data.stamp)

def listener():
	rospy.init_node('my_subscriber_node',anonymous=True)
	rospy.Subscriber('my_topic_1', my_msg_file_cpp, callback)
	rospy.spin()

if __name__=='__main__':
	listener()
////////////////////////////////////////////////////////////////////////////////
cpp의 my_msg_file.msg 파일을 python의 msg폴더로 복사하고
python의 CMakeLists.txt를 아래와 같이 수정한다.
cd && cd ros_test/src/python_test_package && vi CMakeLists.txt
 add_message_files(
   FILES
   my_msg_file_python.msg
   my_msg_file_cpp.msg
 )

msg파일을 python이 잘 못불러오면 환경변수 추가해준다.
export PYTHONPATH="${PYTHONPATH}:/home/nvidia/ros_test/src/python_test_package/msg"

cd && cd ros_test/src/python_test_package/src && sudo chmod +x py_sub_from_cpp_manual.py
###############################################################################################################################



















// 2. python Publisher의 값을 cpp Subscriber로 받기 //
###############################################################################################################################

// 2.1 python(기본 메세지) + cpp subscriber //
////////////////////////////////////////////////////////////////////////////////
#include "ros/ros.h"
#include <std_msgs/Float32.h>
void 호출함수(const std_msgs::Float32::ConstPtr& msg)
{
	double test = msg->data;
}

int main
{
	ros::Subscriber scan_time_sub = n.subscribe("토픽명", 1, 호출함수);
	ros::spin();
}
////////////////////////////////////////////////////////////////////////////////



// 2.1 python(my_msg_file_python) + cpp subscriber //
cd ~/ros_test/src/cpp_test_package/src && vi cpp_sub_from_python_manual.cpp
////////////////////////////////////////////////////////////////////////////////
#include "ros/ros.h"
#include "cpp_test_package/my_msg_file_python.h"

void msgCallback(const cpp_test_package::my_msg_file_python::ConstPtr& msg)
{
	int test = msg->abcd;
	std::cout << test << std::endl;
}

int main(int argc, char **argv) // 노드 메인 함수
{
	ros::init(argc, argv, "my_subscriber_node");
	ros::NodeHandle nh;

	ros::Subscriber imu_sub = nh.subscribe("my_topic_2", 1, msgCallback);
	ros::spin();

	return 0;
}
////////////////////////////////////////////////////////////////////////////////
python의 my_msg_file_python.msg 파일을 cpp의 msg폴더로 복사하고
cpp의 CMakeLists.txt를 아래와 같이 수정한다.
cd && cd ros_test/src/cpp_test_package && vi CMakeLists.txt

 add_message_files(
   FILES
   my_msg_setting_python.msg
   my_msg_setting_cpp.msg
 )

add_executable(cpp_sub_from_python_manual src/cpp_sub_from_python_manual.cpp)
target_link_libraries(cpp_sub_from_python_manual ${catkin_LIBRARIES})
add_dependencies(cpp_sub_from_python_manual cpp_test_package_generate_messages_cpp)



###############################################################################################################################





